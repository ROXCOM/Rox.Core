//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rox.Core {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal resource() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Rox.Core.resource", typeof(resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на try use &apos;{0}&apos; in path &apos;{1}&apos;. is directory: &apos;{2}&apos;.
        /// </summary>
        internal static string debug_UseHostedServices_assemblyFileInfo {
            get {
                return ResourceManager.GetString("debug_UseHostedServices_assemblyFileInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string debug_UseHostedServices_stream {
            get {
                return ResourceManager.GetString("debug_UseHostedServices_stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The transmitted path &apos;{0}&apos; was not found by fileProvider &apos;{1}&apos;.
        /// </summary>
        internal static string error_UseHostedServices_directoryOrFileNotFound {
            get {
                return ResourceManager.GetString("error_UseHostedServices_directoryOrFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на file &apos;{0}&apos; in path &apos;{1}&apos; load exception &apos;{2}&apos;, exception type: &apos;{3}&apos;.
        /// </summary>
        internal static string error_UseHostedServices_exceptionLoadAssembly {
            get {
                return ResourceManager.GetString("error_UseHostedServices_exceptionLoadAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Could not scan file &apos;{0}&apos; in path &apos;{1}&apos;. There was an error &apos;{2}&apos;.
        /// </summary>
        internal static string error_UseHostedServices_failedFileScan {
            get {
                return ResourceManager.GetString("error_UseHostedServices_failedFileScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Searching Types in assembly &apos;{0}&apos; failed. Error description: &apos;{1}&apos;.
        /// </summary>
        internal static string error_UseHostedServices_failedScannAssembly {
            get {
                return ResourceManager.GetString("error_UseHostedServices_failedScannAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Assembly &apos;{0}&apos; is filtered. Will not be loaded.
        /// </summary>
        internal static string info_UseHostedServices_assembliesFiltered {
            get {
                return ResourceManager.GetString("info_UseHostedServices_assembliesFiltered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на file &apos;{0}&apos; in path &apos;{1}&apos; load success.
        /// </summary>
        internal static string info_UseHostedServices_assemblyLoadSuccess {
            get {
                return ResourceManager.GetString("info_UseHostedServices_assemblyLoadSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File &apos;{0}&apos; in path &apos;{1}&apos; is filtered. Will not be scanned.
        /// </summary>
        internal static string info_UseHostedServices_fileIsFiltered {
            get {
                return ResourceManager.GetString("info_UseHostedServices_fileIsFiltered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not found no suitable methods for &apos;{0}&apos;.
        /// </summary>
        internal static string info_UseHostedServices_notFoundSutibleMethods {
            get {
                return ResourceManager.GetString("info_UseHostedServices_notFoundSutibleMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start scanning the transmitted path &apos;{0}&apos;. Use sub path: &apos;{1}&apos;.
        /// </summary>
        internal static string info_UseHostedServices_scaningPath {
            get {
                return ResourceManager.GetString("info_UseHostedServices_scaningPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Found a subpath &apos;{0}&apos;, scan its contents ....
        /// </summary>
        internal static string info_UseHostedServices_scaningSubPath {
            get {
                return ResourceManager.GetString("info_UseHostedServices_scaningSubPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start searching Types in assembly &apos;{0}&apos;.
        /// </summary>
        internal static string info_UseHostedServices_startScannAssembly {
            get {
                return ResourceManager.GetString("info_UseHostedServices_startScannAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stop scanning the transmitted path &apos;{0}&apos;. .
        /// </summary>
        internal static string info_UseHostedServices_stopScaningPath {
            get {
                return ResourceManager.GetString("info_UseHostedServices_stopScaningPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type &apos;{0}&apos; assignable from &apos;{1}&apos;.
        /// </summary>
        internal static string info_UseHostedServices_typeAssignableInterface {
            get {
                return ResourceManager.GetString("info_UseHostedServices_typeAssignableInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type &apos;{0}&apos; assignable from &apos;{1}&apos;. Try to find suitable methods by their signature.
        /// </summary>
        internal static string info_UseHostedServices_typeNotAssignableInterface {
            get {
                return ResourceManager.GetString("info_UseHostedServices_typeNotAssignableInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File &apos;{0}&apos; not found in path &apos;{1}&apos;.
        /// </summary>
        internal static string warning_UseHostedServices_exists {
            get {
                return ResourceManager.GetString("warning_UseHostedServices_exists", resourceCulture);
            }
        }
    }
}
